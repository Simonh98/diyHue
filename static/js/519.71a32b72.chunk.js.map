{"version":3,"file":"static/js/519.71a32b72.chunk.js","mappings":"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","sources":["color.js","containers/Scenes.js","containers/GroupLight.js","containers/ColorPicker.js","containers/ColorTempPicker.js","containers/Group.js","containers/RoomSetup.js","views/Groups.js"],"sourcesContent":["export function cieToRgb(x, y, brightness) {\n  //Set to maximum brightness if no custom value was given (Not the slick ECMAScript 6 way for compatibility reasons)\n  if (brightness === undefined) {\n    brightness = 254;\n  }\n\n  var z = 1.0 - x - y;\n  var Y = (brightness / 254).toFixed(2);\n  var X = Y / y * x;\n  var Z = Y / y * z;\n\n  //Convert to RGB using Wide RGB D65 conversion\n  var red = X * 1.656492 - Y * 0.354851 - Z * 0.255038;\n  var green = -X * 0.707196 + Y * 1.655397 + Z * 0.036152;\n  var blue = X * 0.051713 - Y * 0.121364 + Z * 1.01153;\n\n  //If red, green or blue is larger than 1.0 set it back to the maximum of 1.0\n  if (red > blue && red > green && red > 1.0) {\n    green = green / red;\n    blue = blue / red;\n    red = 1.0;\n  } else if (green > blue && green > red && green > 1.0) {\n    red = red / green;\n    blue = blue / green;\n    green = 1.0;\n  } else if (blue > red && blue > green && blue > 1.0) {\n    red = red / blue;\n    green = green / blue;\n    blue = 1.0;\n  }\n\n  //Reverse gamma correction\n  red =\n    red <= 0.0031308\n      ? 12.92 * red\n      : (1.0 + 0.055) * Math.pow(red, 1.0 / 2.4) - 0.055;\n  green =\n    green <= 0.0031308\n      ? 12.92 * green\n      : (1.0 + 0.055) * Math.pow(green, 1.0 / 2.4) - 0.055;\n  blue =\n    blue <= 0.0031308\n      ? 12.92 * blue\n      : (1.0 + 0.055) * Math.pow(blue, 1.0 / 2.4) - 0.055;\n\n  //Convert normalized decimal to decimal\n  red = Math.round(red * 255);\n  green = Math.round(green * 255);\n  blue = Math.round(blue * 255);\n\n  if (isNaN(red)) red = 0;\n\n  if (isNaN(green)) green = 0;\n\n  if (isNaN(blue)) blue = 0;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function colorTemperatureToRgb(mireds) {\n  var hectemp = 20000.0 / mireds;\n\n  var red, green, blue;\n\n  if (hectemp <= 66) {\n    red = 255;\n    green = 99.4708025861 * Math.log(hectemp) - 161.1195681661;\n    blue =\n      hectemp <= 19\n        ? 0\n        : 138.5177312231 * Math.log(hectemp - 10) - 305.0447927307;\n  } else {\n    red = 329.698727446 * Math.pow(hectemp - 60, -0.1332047592);\n    green = 288.1221695283 * Math.pow(hectemp - 60, -0.0755148492);\n    blue = 255;\n  }\n\n  red = red > 255 ? 255 : red;\n  green = green > 255 ? 255 : green;\n  blue = blue > 255 ? 255 : blue;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function rgbToCie(red, green, blue) {\n  //Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  red =\n    red > 0.04045 ? Math.pow((red + 0.055) / (1.0 + 0.055), 2.4) : red / 12.92;\n  green =\n    green > 0.04045\n      ? Math.pow((green + 0.055) / (1.0 + 0.055), 2.4)\n      : green / 12.92;\n  blue =\n    blue > 0.04045\n      ? Math.pow((blue + 0.055) / (1.0 + 0.055), 2.4)\n      : blue / 12.92;\n\n  //RGB values to XYZ using the Wide RGB D65 conversion formula\n  var X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  var Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  var Z = red * 0.000088 + green * 0.07231 + blue * 0.986039;\n\n  //Calculate the xy values from the XYZ values\n  var x = (X / (X + Y + Z)).toFixed(4);\n  var y = (Y / (X + Y + Z)).toFixed(4);\n\n  if (isNaN(x)) x = 0;\n\n  if (isNaN(y)) y = 0;\n\n  return [parseFloat(x), parseFloat(y)];\n}\n","import Modal from \"react-modal\";\nimport axios from \"axios\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { cieToRgb, colorTemperatureToRgb } from \"../color\";\n\nimport nightsky from \"../static/images/nightsky.jpg\";\n\nconst Scenes = ({\n  HOST_IP,\n  api_key,\n  groupId,\n  scenes,\n  sceneModal,\n  setSceneModal,\n}) => {\n  const applyScene = (scene) => {\n    axios.put(`${HOST_IP}/api/${api_key}/groups/0/action`, { scene: scene });\n  };\n\n  const applyLightState = (light, state) => {\n    axios.put(`${HOST_IP}/api/${api_key}/lights/${light}/state`, state);\n  };\n\n  // function openModal() {\n  //   setSceneModal(true);\n  // }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    // subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setSceneModal(false);\n  }\n\n  const getStyle = (lightstate) => {\n    let color;\n    if (\"xy\" in lightstate) {\n      color = cieToRgb(lightstate[\"xy\"][0], lightstate[\"xy\"][1], 254);\n    } else if (\"ct\" in lightstate) {\n      color = colorTemperatureToRgb(lightstate[\"ct\"]);\n    } else {\n      color = \"rgba(200,200,200,1)\";\n    }\n    return color;\n  };\n\n  return (\n    <Modal\n      isOpen={sceneModal}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      contentLabel=\"Example Modal\"\n    >\n      <div className=\"header\">\n        <div className=\"headline\">Scene Picker</div>\n        <div className=\"iconbox\">\n          <button onClick={closeModal}>\n            <FaTimes />\n          </button>\n        </div>\n      </div>\n      <div className=\"scenecontainer\">\n        {Object.entries(scenes)\n          .filter((scene) => scene[1].group === groupId)\n          .map(([id, scene]) => (\n            <div\n              key={id}\n              className=\"scene\"\n              style={{\n                background: `url(${nightsky})`,\n                backgroundSize: \"cover\",\n              }}\n              onClick={() => applyScene(id)}\n            >\n              <div className=\"dimmer\">\n                {Object.entries(scene.lightstates)\n                  .filter((item, index) => index < 5)\n                  .map(([light, state]) => (\n                    <div\n                      key={light}\n                      className=\"color\"\n                      style={{ background: `${getStyle(state)}` }}\n                      onClick={() => applyLightState(light, state)}\n                    ></div>\n                  ))}\n                <div className=\"name\">{scene.name}</div>\n              </div>\n              <div className=\"dynamiccontrol\">\n                <i className=\"far fa-play-circle\"></i>\n              </div>\n            </div>\n          ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default Scenes;\n","import { RiAlertLine } from \"react-icons/ri\";\nimport axios from \"axios\";\nimport { cieToRgb, colorTemperatureToRgb } from \"../color\";\nimport { FaLightbulb } from \"react-icons/fa\";\n\nconst Light = ({ HOST_IP, api_key, id, light }) => {\n  const switchLight = (newState) => {\n    console.log(\"Apply state \" + JSON.stringify(newState));\n    axios.put(`${HOST_IP}/api/${api_key}/lights/${id}/state`, newState);\n  };\n\n  const getStyle = () => {\n    if (light[\"state\"][\"on\"]) {\n      let lightBg;\n      if (light[\"state\"][\"colormode\"] === \"xy\") {\n        lightBg = cieToRgb(\n          light[\"state\"][\"xy\"][0],\n          light[\"state\"][\"xy\"][1],\n          254\n        );\n      } else if (light[\"state\"][\"colormode\"] === \"ct\") {\n        lightBg = colorTemperatureToRgb(light[\"state\"][\"ct\"]);\n      } else {\n        lightBg = \"linear-gradient(90deg, rgba(255,212,93,1))\";\n      }\n      return { background: lightBg };\n    }\n  };\n\n  return (\n    <div className=\"groupCard light\">\n      <div className=\"row top\">\n        <div className=\"gradient\" style={getStyle()}><FaLightbulb /></div>\n        <div className=\"text\"><p className=\"name\">{light.name}{\" \"}\n          {light[\"state\"][\"reachable\"] || <RiAlertLine title=\"Unrechable\" />}</p></div>\n        <div className=\"switchContainer\"><label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            defaultChecked={light[\"state\"][\"on\"]}\n            onChange={(e) => switchLight({ on: e.currentTarget.checked })}\n          />\n          <span className=\"slider\">\n          </span></label></div>\n      </div>\n      <div className=\"row\"><div className=\"sliderContainer\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"254\"\n          defaultValue={light[\"state\"][\"bri\"]}\n          className=\"slider\"\n          onChange={(e) =>\n            switchLight({ bri: parseInt(e.currentTarget.value) })\n          }\n        />\n      </div></div>\n    </div>\n\n  );\n};\n\n\n\n\n\nexport default Light;\n","import React, { useRef, useEffect } from \"react\";\nimport { cieToRgb, rgbToCie } from \"../color\";\nimport iro from \"@jaames/iro\";\nimport axios from \"axios\";\n\nexport default function KelvinPicker({\n  HOST_IP,\n  api_key,\n  lights,\n  groupLights,\n}) {\n  const pickerRef = useRef(null);\n  const picker = useRef(null);\n\n  useEffect(() => {\n    const onChange = (newState) => {\n      let rgb = newState.rgb;\n\n      //console.log(newState.rgb);\n      //console.log(\"Apply state \" + JSON.stringify(newState));\n      axios.put(\n        `${HOST_IP}/api/${api_key}/lights/${\n          groupLights[newState[\"index\"]]\n        }/state`,\n        { xy: rgbToCie(rgb[\"r\"], rgb[\"g\"], rgb[\"b\"]) }\n      );\n    };\n\n    let colors = [];\n    for (var light of groupLights.entries()) {\n      light = light[1];\n      if (\"xy\" in lights[light][\"state\"]) {\n        colors.push(\n          cieToRgb(\n            lights[light][\"state\"][\"xy\"][0],\n            lights[light][\"state\"][\"xy\"][1],\n            254\n          )\n        );\n      }\n    }\n\n    if (pickerRef.current && !picker.current) {\n      picker.current = new iro.ColorPicker(pickerRef.current, {\n        layout: [\n          {\n            component: iro.ui.Wheel,\n            options: {},\n          },\n        ],\n        colors: colors,\n      });\n      //console.log(picker.current.state.color.rgb)\n      picker.current.on(\"input:end\", onChange);\n    }\n  }, [groupLights, lights, HOST_IP, api_key]);\n  return <div ref={pickerRef}></div>;\n}\n","import React, { useRef, useEffect } from \"react\";\nimport { colorTemperatureToRgb } from \"../color\";\nimport iro from \"@jaames/iro\";\nimport axios from \"axios\";\n\nexport default function KelvinPicker({ HOST_IP, api_key, group, groupId }) {\n  const pickerRef = useRef(null);\n  const picker = useRef(null);\n\n  useEffect(() => {\n    const onChange = (newState) => {\n      let kelvin = newState.kelvin;\n      let mirek = Math.floor((11000 - kelvin) / 25.5 + 153);\n      //console.log(\"#########\");\n      //console.log(mirek);\n      //console.log(colorTemperatureToRgb(group[\"action\"][\"ct\"]));\n      //console.log(\"Apply state \" + JSON.stringify(newState));\n      axios.put(`${HOST_IP}/api/${api_key}/groups/${groupId}/action`, {\n        ct: mirek,\n      });\n    };\n\n    if (pickerRef.current && !picker.current) {\n      picker.current = new iro.ColorPicker(pickerRef.current, {\n        layoutDirection: \"horizontal\",\n        layout: [\n          {\n            component: iro.ui.Slider,\n            options: {\n              sliderType: \"kelvin\",\n              sliderShape: \"circle\",\n            },\n          },\n        ],\n        color: colorTemperatureToRgb(group[\"action\"][\"ct\"]),\n      });\n      picker.current.on(\"input:end\", onChange);\n    }\n  }, [group, groupId, HOST_IP, api_key]);\n  return <div ref={pickerRef}></div>;\n}\n","import {\r\n  FaChevronDown,\r\n  FaImages,\r\n  FaLightbulb,\r\n  FaPalette,\r\n} from \"react-icons/fa\";\r\nimport { BsFillHouseDoorFill } from \"react-icons/bs\";\r\nimport { MdInvertColors } from \"react-icons/md\";\r\nimport { useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport Scenes from \"./Scenes\";\r\nimport Light from \"./GroupLight\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport ColorTempPicker from \"./ColorTempPicker\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\r\nimport { cieToRgb, colorTemperatureToRgb } from \"../color\";\r\nimport { HueIcons } from \"../icons/hass-hue-icons\"\r\n\r\nconst Group = ({ HOST_IP, api_key, id, group, lights, scenes }) => {\r\n  const [showContainer, setShowContainer] = useState(\"closed\");\r\n  const [sceneModal, setSceneModal] = useState(false);\r\n  const [lightsCapabilities, setLightsCapabilities] = useState([]);\r\n\r\n  const barIconVariants = {\r\n    opened: {\r\n      opacity: 1,\r\n    },\r\n    closed: {\r\n      opacity: 0,\r\n    },\r\n  };\r\n\r\n  const inspectLightsCapabilities = () => {\r\n    for (const light of group.lights) {\r\n      if (\r\n        \"xy\" in lights[light][\"state\"] &&\r\n        !lightsCapabilities.includes(\"xy\")\r\n      ) {\r\n        setLightsCapabilities([...lightsCapabilities, \"xy\"]);\r\n      }\r\n      if (\r\n        \"ct\" in lights[light][\"state\"] &&\r\n        !lightsCapabilities.includes(\"ct\")\r\n      ) {\r\n        setLightsCapabilities([...lightsCapabilities, \"ct\"]);\r\n      }\r\n    }\r\n  };\r\n  inspectLightsCapabilities();\r\n  //lightsCapabilities);\r\n\r\n  const defaultContainerView = () => {\r\n    if (showContainer === \"closed\") {\r\n      if (lightsCapabilities.includes(\"xy\")) {\r\n        setShowContainer(\"colorPicker\");\r\n      } else if (lightsCapabilities.includes(\"ct\")) {\r\n        setShowContainer(\"colorTempPicker\");\r\n      } else {\r\n        setShowContainer(\"lights\");\r\n      }\r\n    } else {\r\n      setShowContainer(\"closed\");\r\n    }\r\n  };\r\n\r\n  const handleToggleChange = (state) => {\r\n    const newState = {\r\n      on: state,\r\n    };\r\n    group.state[\"any_on\"] = state;\r\n    if (!state) setShowContainer(\"closed\");\r\n    //console.log(\"Apply state \" + JSON.stringify(newState));\r\n    axios.put(`${HOST_IP}/api/${api_key}/groups/${id}/action`, newState);\r\n  };\r\n\r\n  const handleBriChange = (state) => {\r\n    group.action[\"bri\"] = state;\r\n    const newState = {\r\n      bri: state,\r\n    };\r\n    //console.log(\"Apply state \" + JSON.stringify(newState));\r\n    axios.put(`${HOST_IP}/api/${api_key}/groups/${id}/action`, newState);\r\n  };\r\n\r\n  const statusLights = () => {\r\n    let onLights = 0;\r\n    let offLights = 0;\r\n    for (const light of group.lights) {\r\n      if (lights[light][\"state\"][\"on\"] === true) onLights = onLights + 1;\r\n      else offLights = offLights + 1;\r\n    }\r\n    if (onLights === 0) {\r\n      return \"All lights off\";\r\n    } else if (offLights === 0) {\r\n      return \"All lights on\";\r\n    } else {\r\n      return onLights + \" lights on\";\r\n    }\r\n  };\r\n\r\n  const debouncedChangeHandler = useCallback(\r\n    debounce(handleBriChange, 300),\r\n    []\r\n  );\r\n\r\n  const getStyle = () => {\r\n    if (group.state[\"any_on\"]) {\r\n      let lightBg = \"linear-gradient(45deg, \";\r\n      let step = 100 / group[\"lights\"].length;\r\n      for (const [index, light] of group.lights.entries()) {\r\n        if (lights[light][\"state\"][\"colormode\"] === \"xy\") {\r\n          if (group[\"lights\"].length === 1) {\r\n            lightBg = lightBg + \"rgba(200,200,200,1) 0%,\";\r\n          }\r\n          lightBg =\r\n            lightBg +\r\n            cieToRgb(\r\n              lights[light][\"state\"][\"xy\"][0],\r\n              lights[light][\"state\"][\"xy\"][1],\r\n              254\r\n            ) +\r\n            \" \" +\r\n            Math.floor(step * (index + 1)) +\r\n            \"%,\";\r\n        } else if (lights[light][\"state\"][\"colormode\"] === \"ct\") {\r\n          if (group[\"lights\"].length === 1) {\r\n            lightBg = lightBg + \"rgba(200,200,200,1) 0%,\";\r\n          }\r\n          lightBg =\r\n            lightBg +\r\n            colorTemperatureToRgb(lights[light][\"state\"][\"ct\"]) +\r\n            \" \" +\r\n            Math.floor(step * (index + 1)) +\r\n            \"%,\";\r\n        } else {\r\n          if (group[\"lights\"].length === 1) {\r\n            lightBg = lightBg + \"rgba(200,200,200,1) 0%,\";\r\n          }\r\n          lightBg =\r\n            lightBg +\r\n            \"rgba(255,212,93,1) \" +\r\n            Math.floor(step * (index + 1)) +\r\n            \"%,\";\r\n        }\r\n      }\r\n      return {\r\n        background: lightBg.slice(0, -1) + \")\",\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupCard\">\r\n      <Scenes\r\n        HOST_IP={HOST_IP}\r\n        api_key={api_key}\r\n        groupId={id}\r\n        scenes={scenes}\r\n        sceneModal={sceneModal}\r\n        setSceneModal={setSceneModal}\r\n      />\r\n      <div className=\"row top\">\r\n        <div className=\"gradient\" style={getStyle()}>\r\n          {group[\"type\"] === \"Zone\" ? (\r\n            <BsFillHouseDoorFill\r\n              style={{ fill: group.state[\"any_on\"] ? \"#3a3a3a\" : \"#ddd\" }}\r\n            />\r\n          ) : (\r\n            <HueIcons\r\n              type = { \"room-\" + group.class }\r\n              color={ group.state[\"any_on\"] ? \"#3a3a3a\" : \"#ddd\" }\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"text\">\r\n          <p className=\"name\"> {group.name} </p>\r\n          <p className=\"subtext\">{statusLights()}</p>\r\n        </div>\r\n        <div className=\"switchContainer\">\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              defaultValue={group.state[\"any_on\"]}\r\n              defaultChecked={group.state[\"any_on\"]}\r\n              onChange={(e) => handleToggleChange(e.target.checked)}\r\n            />\r\n            <span className=\"slider\"> </span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className=\"row background\">\r\n        <AnimatePresence initial={false}>\r\n          {group.state[\"any_on\"] && (\r\n            <motion.div\r\n              className=\"sliderContainer\"\r\n              initial=\"collapsed\"\r\n              animate=\"open\"\r\n              exit=\"collapsed\"\r\n              variants={{\r\n                open: {\r\n                  opacity: 1,\r\n                  height: \"auto\",\r\n                },\r\n                collapsed: {\r\n                  opacity: 0,\r\n                  height: 0,\r\n                },\r\n              }}\r\n              transition={{\r\n                duration: 0.3,\r\n              }}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"254\"\r\n                defaultValue={group.action[\"bri\"]}\r\n                step=\"1\"\r\n                className=\"slider\"\r\n                onChange={(e) =>\r\n                  debouncedChangeHandler(parseInt(e.target.value))\r\n                }\r\n              />\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      <AnimateSharedLayout>\r\n        {showContainer !== \"closed\" && (\r\n          <motion.div\r\n            className=\"row buttons\"\r\n            initial=\"closed\"\r\n            animate={showContainer === \"closed\" ? \"closed\" : \"opened\"}\r\n            variants={barIconVariants}\r\n          >\r\n            <motion.div\r\n              className={`btn ${\r\n                lightsCapabilities.includes(\"xy\") ? \"\" : \"disabled\"\r\n              }`}\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.9 }}\r\n              variants={barIconVariants}\r\n            >\r\n              <FaPalette\r\n                onClick={\r\n                  lightsCapabilities.includes(\"xy\")\r\n                    ? () => setShowContainer(\"colorPicker\")\r\n                    : false\r\n                }\r\n              />\r\n            </motion.div>\r\n            <motion.div\r\n              className={`btn ${\r\n                lightsCapabilities.includes(\"ct\") ? \"\" : \"disabled\"\r\n              }`}\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.9 }}\r\n            >\r\n              <MdInvertColors\r\n                onClick={\r\n                  lightsCapabilities.includes(\"ct\")\r\n                    ? () => setShowContainer(\"colorTempPicker\")\r\n                    : false\r\n                }\r\n              />\r\n            </motion.div>\r\n            <motion.div\r\n              className=\"btn\"\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.9 }}\r\n            >\r\n              <FaImages onClick={() => setSceneModal(true)} />\r\n            </motion.div>\r\n            <motion.div\r\n              className=\"btn\"\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.9 }}\r\n            >\r\n              <FaLightbulb onClick={() => setShowContainer(\"lights\")} />\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n        <motion.div className=\"row colorpicker\">\r\n          <AnimatePresence initial={false} exitBeforeEnter>\r\n            {showContainer === \"colorPicker\" && (\r\n              <motion.section\r\n                key=\"content\"\r\n                initial=\"collapsed\"\r\n                animate=\"open\"\r\n                exit=\"collapsed\"\r\n                variants={{\r\n                  open: {\r\n                    opacity: 1,\r\n                    scale: 1,\r\n                    height: \"auto\",\r\n                  },\r\n                  collapsed: {\r\n                    opacity: 0,\r\n                    scale: 0.5,\r\n                    height: 0,\r\n                  },\r\n                }}\r\n                transition={{\r\n                  duration: 0.3,\r\n                }}\r\n              >\r\n                <ColorPicker\r\n                  HOST_IP={HOST_IP}\r\n                  api_key={api_key}\r\n                  lights={lights}\r\n                  groupLights={group.lights}\r\n                />\r\n              </motion.section>\r\n            )}\r\n            {showContainer === \"colorTempPicker\" && (\r\n              <motion.section\r\n                key=\"content\"\r\n                initial=\"collapsed\"\r\n                animate=\"open\"\r\n                exit=\"collapsed\"\r\n                variants={{\r\n                  open: {\r\n                    opacity: 1,\r\n                    height: \"auto\",\r\n                    scale: 1,\r\n                  },\r\n                  collapsed: {\r\n                    opacity: 0,\r\n                    height: 0,\r\n                  },\r\n                }}\r\n                transition={{\r\n                  duration: 0.3,\r\n                }}\r\n              >\r\n                <ColorTempPicker\r\n                  HOST_IP={HOST_IP}\r\n                  api_key={api_key}\r\n                  groupId={id}\r\n                  group={group}\r\n                />\r\n              </motion.section>\r\n            )}\r\n            {showContainer === \"lights\" && (\r\n              <motion.div\r\n                className=\"lights\"\r\n                initial=\"collapsed\"\r\n                animate=\"open\"\r\n                exit=\"collapsed\"\r\n                variants={{\r\n                  open: {\r\n                    opacity: 1,\r\n                    height: \"auto\",\r\n                  },\r\n                  collapsed: {\r\n                    opacity: 0,\r\n                    height: 0,\r\n                  },\r\n                }}\r\n                transition={{\r\n                  duration: 0.3,\r\n                }}\r\n              >\r\n                {group.lights.map((light) => (\r\n                  <Light\r\n                    HOST_IP={HOST_IP}\r\n                    api_key={api_key}\r\n                    key={light}\r\n                    id={light}\r\n                    light={lights[light]}\r\n                  />\r\n                ))}\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </motion.div>\r\n      </AnimateSharedLayout>\r\n      <AnimatePresence>\r\n        <div className=\"row bottom\">\r\n          <motion.div\r\n            className=\"expandbtn\"\r\n            initial=\"collapsed\"\r\n            animate={showContainer === \"closed\" ? \"collapsed\" : \"open\"}\r\n            whileHover={{ scale: 1.2 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            variants={{\r\n              open: {\r\n                rotate: 180,\r\n              },\r\n              collapsed: {\r\n                rotate: 0,\r\n              },\r\n            }}\r\n            transition={{\r\n              duration: 0.3,\r\n            }}\r\n          >\r\n            <FaChevronDown onClick={() => defaultContainerView()} />\r\n          </motion.div>\r\n        </div>\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Group;","import { FaApple } from \"react-icons/fa\";\nimport { IoLogoAndroid } from \"react-icons/io\";\n\nfunction RoomSetup() {\n\n    return ( \n    <div className=\"roomsetup\">\n        <p>There are no rooms or zones created yet. Use Hue Essentials or Hue app to set up this bridge.</p>\n        <div className=\"storebutton\">\n            <img src=\"https://is4-ssl.mzstatic.com/image/thumb/Purple122/v4/13/34/4f/13344f80-706e-257c-c72b-e9d698a33bc5/AppIcon-1x_U007emarketing-0-7-0-85-220.png/246x0w.webp\" alt=\"Hue Essential App\"></img>\n            <p>Hue Essentials</p>\n            <a href=\"https://apps.apple.com/com/app/hue-essentials/id1462943921\"><FaApple /></a>\n            <a href=\"https://play.google.com/store/apps/details?id=com.superthomaslab.hueessentials\"><IoLogoAndroid /></a>\n        </div>\n        <div className=\"storebutton\">\n            <img src=\"https://is3-ssl.mzstatic.com/image/thumb/Purple112/v4/a8/30/a2/a830a22d-e50b-d1d7-0824-457beac55874/AppIcon-1x_U007emarketing-0-7-0-85-220.png/246x0w.webp\" alt=\"Phillips Hue App\"></img>\n            <p>Phillips Hue</p>\n            <a href=\"https://apps.apple.com/us/app/philips-hue/id1055281310\"><FaApple /></a>\n            <a href=\"https://play.google.com/store/apps/details?id=com.philips.lighting.hue2\"><IoLogoAndroid /></a>\n        </div>\n    </div>\n     \n    );\n}\n\nexport default RoomSetup;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Group from \"../containers/Group\";\nimport RoomSetup from \"../containers/RoomSetup\";\n\nexport default function Groups({ HOST_IP, API_KEY }) {\n  const [config, setConfig] = useState({\n    config: {},\n    lights: {},\n    groups: {},\n    scenes: {},\n  });\n\n  useEffect(() => {\n    const fetchConfig = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/api/${API_KEY}`)\n          .then((fetchedData) => {\n            //console.log(fetchedData.data);\n            setConfig(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    fetchConfig();\n    const interval = setInterval(() => {\n      fetchConfig();\n    }, 2000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [HOST_IP, API_KEY]);\n\n  return (\n    <div className=\"inner\">\n      <div className=\"cardGrid\">\n        {Object.keys(config.groups).length === 0 ? ( <RoomSetup /> ): (<></>)}\n        {Object.entries(config.groups)\n          .filter((group) => group[1].type !== \"Entertainment\")\n          .map(([id, group]) => (\n            <Group\n              key={id}\n              api_key={API_KEY}\n              HOST_IP={HOST_IP}\n              id={id}\n              group={group}\n              lights={config.lights}\n              scenes={config.scenes}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n"],"names":["cieToRgb","x","y","brightness","undefined","z","Y","toFixed","X","Z","red","green","blue","Math","pow","round","isNaN","floor","colorTemperatureToRgb","mireds","hectemp","log","rgbToCie","parseFloat","HOST_IP","api_key","groupId","scenes","sceneModal","setSceneModal","closeModal","isOpen","onAfterOpen","onRequestClose","contentLabel","className","onClick","Object","entries","filter","scene","group","map","id","style","background","nightsky","backgroundSize","axios","applyScene","lightstates","item","index","lightstate","light","state","applyLightState","name","switchLight","newState","console","JSON","stringify","getStyle","title","type","defaultChecked","onChange","e","on","currentTarget","checked","min","max","defaultValue","bri","parseInt","value","KelvinPicker","lights","groupLights","pickerRef","useRef","picker","useEffect","colors","push","current","iro","layout","component","options","rgb","xy","ref","layoutDirection","sliderType","sliderShape","color","kelvin","mirek","ct","useState","showContainer","setShowContainer","lightsCapabilities","setLightsCapabilities","barIconVariants","opened","opacity","closed","includes","inspectLightsCapabilities","debouncedChangeHandler","useCallback","debounce","action","lightBg","step","length","slice","fill","class","onLights","offLights","statusLights","handleToggleChange","target","AnimatePresence","initial","motion","animate","exit","variants","open","height","collapsed","transition","duration","AnimateSharedLayout","whileHover","scale","whileTap","exitBeforeEnter","rotate","src","alt","href","Groups","API_KEY","config","groups","setConfig","fetchConfig","then","fetchedData","data","catch","error","interval","setInterval","clearInterval","keys"],"sourceRoot":""}