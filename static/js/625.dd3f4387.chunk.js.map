{"version":3,"file":"static/js/625.dd3f4387.chunk.js","mappings":"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","sources":["containers/Flash.js","views/Bridge.js"],"sourcesContent":["import { FaTimes } from \"react-icons/fa\";\nimport FlashMessage from \"react-flash-message\";\n\nexport default function Flash({ type, message, duration, setType }) {\n  return (\n    <FlashMessage duration={duration} persistOnHover={true}>\n      <div className=\"notificationContainer\">\n        <div className={`notification ${type}`}>\n          <p>{message}</p>\n          <div className=\"icon\">\n            <FaTimes onClick={() => setType(\"none\")} />\n          </div>\n        </div>\n      </div>\n    </FlashMessage>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Flash from \"../containers/Flash\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nconst Bridge = ({ HOST_IP, API_KEY }) => {\n  const [type, setType] = useState(\"none\");\n  const [message, setMessage] = useState(\"no message\");\n  const [bridgeName, setBridgeName] = useState(\"\");\n  const [swversion, setSwversion] = useState(\"\");\n  const [apiVersion, setApiVersion] = useState(\"\");\n  const [remoteApi, setRemoteApi] = useState(false);\n  const [discovery, setDiscovery] = useState(true);\n  const [timezone, setTimezone] = useState(\"\");\n  const [timezones, setTimezones] = useState([]);\n  const [readonlyConf, setReadonlyConf] = useState({});\n\n  useEffect(() => {\n    const fetchTimezones = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/api/${API_KEY}/info/timezones`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setTimezones(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    fetchTimezones();\n    axios\n      .get(`${HOST_IP}/api/${API_KEY}/config`)\n      .then((result) => {\n        setBridgeName(result.data[\"name\"]);\n        setSwversion(result.data[\"swversion\"]);\n        setApiVersion(result.data[\"apiversion\"]);\n        setDiscovery(result.data[\"discovery\"]);\n        setRemoteApi(result.data[\"Remote API enabled\"]);\n        setTimezone(result.data[\"timezone\"]);\n        setReadonlyConf(result.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [HOST_IP, API_KEY]);\n\n  const onSubmit = (e) => {\n    console.log(\"submit\");\n    e.preventDefault();\n    axios\n      .put(`${HOST_IP}/api/${API_KEY}/config`, {\n        name: bridgeName,\n        swversion: swversion,\n        apiversion: apiVersion,\n        timezone: timezone,\n        \"Remote API enabled\": remoteApi,\n        discovery: discovery\n      })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Successfully saved\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const dumpConfig = () => {\n    axios\n      .get(`${HOST_IP}/save`)\n      .then(() => {\n        setMessage(\"Config dumped to local disk\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  return (\n    <div className=\"inner\">\n      {type !== \"none\" && (\n        <Flash\n          type={type}\n          message={message}\n          duration=\"5000\"\n          setType={setType}\n        />\n      )}\n      <div className=\"contentContainer spacer\">\n        <div className=\"headline\">Bridge Config</div>\n          <form className=\"add-form\" onSubmit={(e) => onSubmit(e)}>\n            <div className=\"form-control\">\n              <label>Bridge Name</label>\n              <input\n                type=\"text\"\n                placeholder=\"Bridge Name\"\n                value={bridgeName}\n                onChange={(e) => setBridgeName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label>Software Version</label>\n              <input\n                type=\"number\"\n                pattern=\"[0-9]+\"\n                placeholder=\"swversion\"\n                value={swversion}\n                onChange={(e) => setSwversion(e.target.value)}\n              />\n              <p>\n                <a href=\"https://www.philips-hue.com/en-gb/support/release-notes/bridge\">\n                  check here for last versions\n                </a>\n              </p>\n            </div>\n            <div className=\"form-control\">\n              <label>API Version</label>\n              <input\n                type=\"text\"\n                placeholder=\"apiversion\"\n                value={apiVersion}\n                onChange={(e) => setApiVersion(e.target.value)}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label>Timezone</label>\n              <Dropdown\n                options={timezones}\n                value={timezone}\n                onChange={(e) => setTimezone(e.value)}\n                placeholder=\"Choose light modelid\"\n              />\n            </div>\n            <div className=\"switchContainer\">\n              <p>Remote API </p>\n              <label className=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  value={remoteApi}\n                  checked={remoteApi}\n                  onChange={(e) => setRemoteApi(e.target.checked)}\n                />\n                <span className=\"slider\"></span>\n              </label>\n            </div>\n            <div className=\"switchContainer\">\n              <p>Discovery</p>\n              <label className=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  value={discovery}\n                  checked={discovery}\n                  onChange={(e) => setDiscovery(e.target.checked)}\n                />\n                <span className=\"slider\"></span>\n              </label>\n            </div>\n            <div className=\"form-control\">\n              <input type=\"submit\" value=\"Save\" className=\"btn btn-block\" />\n            </div>\n          </form>\n      </div>\n\n      <div className=\"contentContainer\">\n        <div className=\"headline\">Readonly Config</div>\n          <div className=\"form-control\">\n            <label>BridgeID</label>\n            <input\n              readOnly\n              type=\"text\"\n              placeholder=\"bridgeid\"\n              value={readonlyConf[\"bridgeid\"]}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label>Ip Address</label>\n            <input\n              readOnly\n              type=\"text\"\n              placeholder=\"ip\"\n              value={readonlyConf[\"ipaddress\"]}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label>Mac</label>\n            <input\n              readOnly\n              type=\"text\"\n              placeholder=\"mac\"\n              value={readonlyConf[\"mac\"]}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label>Local time</label>\n            <input\n              readOnly\n              type=\"text\"\n              placeholder=\"time\"\n              value={Date(readonlyConf[\"localtime\"])}\n            />\n          </div>\n\n          <div className=\"form-control\">\n              <input type=\"submit\" value=\"Force Config Dump\" className=\"btn btn-block\" \n                 onClick={() => dumpConfig()}\n              />\n      </div>\n\n      </div>\n    </div>\n    \n \n  );\n};\n\nexport default Bridge;\n"],"names":["Flash","type","message","duration","setType","persistOnHover","className","onClick","HOST_IP","API_KEY","useState","setMessage","bridgeName","setBridgeName","swversion","setSwversion","apiVersion","setApiVersion","remoteApi","setRemoteApi","discovery","setDiscovery","timezone","setTimezone","timezones","setTimezones","readonlyConf","setReadonlyConf","useEffect","undefined","axios","then","fetchedData","console","log","data","catch","error","result","onSubmit","e","preventDefault","name","apiversion","placeholder","value","onChange","target","pattern","href","options","checked","readOnly","Date"],"sourceRoot":""}